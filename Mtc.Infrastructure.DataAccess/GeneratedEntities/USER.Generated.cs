//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 5/9/2016 4:32:41 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace MtcModel
{

    /// <summary>
    /// There are no comments for MtcModel.USER in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="MtcModel", Name="USER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new USER object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="familyName">Initial value of FamilyName.</param>
        /// <param name="userName">Initial value of UserName.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="password">Initial value of Password.</param>
        public static USER CreateUSER(int id, string firstName, string familyName, string userName, string email, string password)
        {
            USER uSER = new USER();
            uSER.Id = id;
            uSER.FirstName = firstName;
            uSER.FamilyName = familyName;
            uSER.UserName = userName;
            uSER.Email = email;
            uSER.Password = password;
            return uSER;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for MiddleName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                string value = _MiddleName;
                OnGetMiddleName(ref value);
                return value;
            }
            set
            {
                if (_MiddleName != value)
                {
                  OnMiddleNameChanging(ref value);
                  ReportPropertyChanging("MiddleName");
                  _MiddleName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MiddleName");
                  OnMiddleNameChanged();
              }
            }
        }
        private string _MiddleName;
        partial void OnGetMiddleName(ref string value);
        partial void OnMiddleNameChanging(ref string value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// There are no comments for FamilyName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FamilyName
        {
            get
            {
                string value = _FamilyName;
                OnGetFamilyName(ref value);
                return value;
            }
            set
            {
                if (_FamilyName != value)
                {
                  OnFamilyNameChanging(ref value);
                  ReportPropertyChanging("FamilyName");
                  _FamilyName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FamilyName");
                  OnFamilyNameChanged();
              }
            }
        }
        private string _FamilyName;
        partial void OnGetFamilyName(ref string value);
        partial void OnFamilyNameChanging(ref string value);
        partial void OnFamilyNameChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Password
        {
            get
            {
                string value = _Password;
                OnGetPassword(ref value);
                return value;
            }
            set
            {
                if (_Password != value)
                {
                  OnPasswordChanging(ref value);
                  ReportPropertyChanging("Password");
                  _Password = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Password");
                  OnPasswordChanged();
              }
            }
        }
        private string _Password;
        partial void OnGetPassword(ref string value);
        partial void OnPasswordChanging(ref string value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// There are no comments for ExperiencePoints in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ExperiencePoints
        {
            get
            {
                global::System.Nullable<int> value = _ExperiencePoints;
                OnGetExperiencePoints(ref value);
                return value;
            }
            set
            {
                if (_ExperiencePoints != value)
                {
                  OnExperiencePointsChanging(ref value);
                  ReportPropertyChanging("ExperiencePoints");
                  _ExperiencePoints = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ExperiencePoints");
                  OnExperiencePointsChanged();
              }
            }
        }
        private global::System.Nullable<int> _ExperiencePoints;
        partial void OnGetExperiencePoints(ref global::System.Nullable<int> value);
        partial void OnExperiencePointsChanging(ref global::System.Nullable<int> value);
        partial void OnExperiencePointsChanged();
    
        /// <summary>
        /// There are no comments for Level in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<short> Level
        {
            get
            {
                global::System.Nullable<short> value = _Level;
                OnGetLevel(ref value);
                return value;
            }
            set
            {
                if (_Level != value)
                {
                  OnLevelChanging(ref value);
                  ReportPropertyChanging("Level");
                  _Level = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Level");
                  OnLevelChanged();
              }
            }
        }
        private global::System.Nullable<short> _Level;
        partial void OnGetLevel(ref global::System.Nullable<short> value);
        partial void OnLevelChanging(ref global::System.Nullable<short> value);
        partial void OnLevelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for DOCUMENTs_MentorId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_DocumentMentor_ID", "DOCUMENTs_MentorId")]
        public EntityCollection<DOCUMENT> DOCUMENTs_MentorId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<DOCUMENT>("MtcModel.FK_DocumentMentor_ID", "DOCUMENTs_MentorId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<DOCUMENT>("MtcModel.FK_DocumentMentor_ID", "DOCUMENTs_MentorId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for DOCUMENTs_UserId in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_DocumentUser_ID", "DOCUMENTs_UserId")]
        public EntityCollection<DOCUMENT> DOCUMENTs_UserId
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<DOCUMENT>("MtcModel.FK_DocumentUser_ID", "DOCUMENTs_UserId");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<DOCUMENT>("MtcModel.FK_DocumentUser_ID", "DOCUMENTs_UserId", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TASKs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_TaskUser_Id", "TASKs")]
        public EntityCollection<TASK> TASKs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TASK>("MtcModel.FK_TaskUser_Id", "TASKs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TASK>("MtcModel.FK_TaskUser_Id", "TASKs", value);
                }
            }
        }

        #endregion
    }

}

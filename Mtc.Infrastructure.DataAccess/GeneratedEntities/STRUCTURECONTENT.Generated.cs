//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 5/11/2016 4:31:32 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace MtcModel
{

    /// <summary>
    /// There are no comments for MtcModel.STRUCTURECONTENT in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="MtcModel", Name="STRUCTURECONTENT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STRUCTURECONTENT : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new STRUCTURECONTENT object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="structureElementId">Initial value of StructureElementId.</param>
        /// <param name="documentId">Initial value of DocumentId.</param>
        /// <param name="order">Initial value of Order.</param>
        public static STRUCTURECONTENT CreateSTRUCTURECONTENT(int id, int structureElementId, int documentId, int order)
        {
            STRUCTURECONTENT sTRUCTURECONTENT = new STRUCTURECONTENT();
            sTRUCTURECONTENT.Id = id;
            sTRUCTURECONTENT.StructureElementId = structureElementId;
            sTRUCTURECONTENT.DocumentId = documentId;
            sTRUCTURECONTENT.Order = order;
            return sTRUCTURECONTENT;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for StructureElementId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int StructureElementId
        {
            get
            {
                int value = _StructureElementId;
                OnGetStructureElementId(ref value);
                return value;
            }
            set
            {
                if (_StructureElementId != value)
                {
                  OnStructureElementIdChanging(ref value);
                  ReportPropertyChanging("StructureElementId");
                  _StructureElementId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("StructureElementId");
                  OnStructureElementIdChanged();
              }
            }
        }
        private int _StructureElementId;
        partial void OnGetStructureElementId(ref int value);
        partial void OnStructureElementIdChanging(ref int value);
        partial void OnStructureElementIdChanged();
    
        /// <summary>
        /// There are no comments for Title in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Title
        {
            get
            {
                string value = _Title;
                OnGetTitle(ref value);
                return value;
            }
            set
            {
                if (_Title != value)
                {
                  OnTitleChanging(ref value);
                  ReportPropertyChanging("Title");
                  _Title = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Title");
                  OnTitleChanged();
              }
            }
        }
        private string _Title;
        partial void OnGetTitle(ref string value);
        partial void OnTitleChanging(ref string value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// There are no comments for Content in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] Content
        {
            get
            {
                byte[] value = _Content;
                OnGetContent(ref value);
                return value;
            }
            set
            {
                if (_Content != value)
                {
                  OnContentChanging(ref value);
                  ReportPropertyChanging("Content");
                  _Content = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Content");
                  OnContentChanged();
              }
            }
        }
        private byte[] _Content;
        partial void OnGetContent(ref byte[] value);
        partial void OnContentChanging(ref byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// There are no comments for DocumentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int DocumentId
        {
            get
            {
                int value = _DocumentId;
                OnGetDocumentId(ref value);
                return value;
            }
            set
            {
                if (_DocumentId != value)
                {
                  OnDocumentIdChanging(ref value);
                  ReportPropertyChanging("DocumentId");
                  _DocumentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DocumentId");
                  OnDocumentIdChanged();
              }
            }
        }
        private int _DocumentId;
        partial void OnGetDocumentId(ref int value);
        partial void OnDocumentIdChanging(ref int value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// There are no comments for Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Order
        {
            get
            {
                int value = _Order;
                OnGetOrder(ref value);
                return value;
            }
            set
            {
                if (_Order != value)
                {
                  OnOrderChanging(ref value);
                  ReportPropertyChanging("Order");
                  _Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Order");
                  OnOrderChanged();
              }
            }
        }
        private int _Order;
        partial void OnGetOrder(ref int value);
        partial void OnOrderChanging(ref int value);
        partial void OnOrderChanged();
    
        /// <summary>
        /// There are no comments for CurrentProgress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CurrentProgress
        {
            get
            {
                global::System.Nullable<int> value = _CurrentProgress;
                OnGetCurrentProgress(ref value);
                return value;
            }
            set
            {
                if (_CurrentProgress != value)
                {
                  OnCurrentProgressChanging(ref value);
                  ReportPropertyChanging("CurrentProgress");
                  _CurrentProgress = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrentProgress");
                  OnCurrentProgressChanged();
              }
            }
        }
        private global::System.Nullable<int> _CurrentProgress;
        partial void OnGetCurrentProgress(ref global::System.Nullable<int> value);
        partial void OnCurrentProgressChanging(ref global::System.Nullable<int> value);
        partial void OnCurrentProgressChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for DOCUMENT in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_StructureContentDocument_Id", "DOCUMENT")]
        public DOCUMENT DOCUMENT
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DOCUMENT>("MtcModel.FK_StructureContentDocument_Id", "DOCUMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DOCUMENT>("MtcModel.FK_StructureContentDocument_Id", "DOCUMENT").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for DOCUMENT in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DOCUMENT> DOCUMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DOCUMENT>("MtcModel.FK_StructureContentDocument_Id", "DOCUMENT");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<DOCUMENT>("MtcModel.FK_StructureContentDocument_Id", "DOCUMENT", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<DOCUMENT>("MtcModel.FK_StructureContentDocument_Id", "DOCUMENT").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for STRUCTUREELEMENT in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_StructureElementDocument_Id", "STRUCTUREELEMENT")]
        public STRUCTUREELEMENT STRUCTUREELEMENT
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<STRUCTUREELEMENT>("MtcModel.FK_StructureElementDocument_Id", "STRUCTUREELEMENT").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<STRUCTUREELEMENT>("MtcModel.FK_StructureElementDocument_Id", "STRUCTUREELEMENT").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for STRUCTUREELEMENT in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STRUCTUREELEMENT> STRUCTUREELEMENTReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<STRUCTUREELEMENT>("MtcModel.FK_StructureElementDocument_Id", "STRUCTUREELEMENT");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<STRUCTUREELEMENT>("MtcModel.FK_StructureElementDocument_Id", "STRUCTUREELEMENT", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<STRUCTUREELEMENT>("MtcModel.FK_StructureElementDocument_Id", "STRUCTUREELEMENT").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for TASKs in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MtcModel", "FK_TaskStructureContent_Id", "TASKs")]
        public EntityCollection<TASK> TASKs
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<TASK>("MtcModel.FK_TaskStructureContent_Id", "TASKs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<TASK>("MtcModel.FK_TaskStructureContent_Id", "TASKs", value);
                }
            }
        }

        #endregion
    }

}

//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 5/9/2016 10:51:07 AM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace MtcModel
{

    /// <summary>
    /// There are no comments for MtcModel.IMAGE in the schema.
    /// </summary>
    /// <KeyProperties>
    /// Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="MtcModel", Name="IMAGE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IMAGE : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new IMAGE object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        public static IMAGE CreateIMAGE(int id)
        {
            IMAGE iMAGE = new IMAGE();
            iMAGE.Id = id;
            return iMAGE;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Path in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Path
        {
            get
            {
                string value = _Path;
                OnGetPath(ref value);
                return value;
            }
            set
            {
                if (_Path != value)
                {
                  OnPathChanging(ref value);
                  ReportPropertyChanging("Path");
                  _Path = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Path");
                  OnPathChanged();
              }
            }
        }
        private string _Path;
        partial void OnGetPath(ref string value);
        partial void OnPathChanging(ref string value);
        partial void OnPathChanged();
    
        /// <summary>
        /// There are no comments for ImageTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ImageTypeId
        {
            get
            {
                global::System.Nullable<int> value = _ImageTypeId;
                OnGetImageTypeId(ref value);
                return value;
            }
            set
            {
                if (_ImageTypeId != value)
                {
                  OnImageTypeIdChanging(ref value);
                  ReportPropertyChanging("ImageTypeId");
                  _ImageTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ImageTypeId");
                  OnImageTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ImageTypeId;
        partial void OnGetImageTypeId(ref global::System.Nullable<int> value);
        partial void OnImageTypeIdChanging(ref global::System.Nullable<int> value);
        partial void OnImageTypeIdChanged();

        #endregion
    }

}

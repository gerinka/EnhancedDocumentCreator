//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 5/11/2016 4:41:59 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MtcModel", "FK_DocumentDocumentTemplate_ID", "Documenttemplate", RelationshipMultiplicity.One, typeof(MtcModel.Documenttemplate), "Documents", RelationshipMultiplicity.Many, typeof(MtcModel.Document), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_DocumentMentor_ID", "User_MentorId", RelationshipMultiplicity.ZeroOrOne, typeof(MtcModel.User), "Documents_MentorId", RelationshipMultiplicity.Many, typeof(MtcModel.Document), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_DocumentUser_ID", "User_UserId", RelationshipMultiplicity.One, typeof(MtcModel.User), "Documents_UserId", RelationshipMultiplicity.Many, typeof(MtcModel.Document), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_ReferenceDocument_Id", "Document", RelationshipMultiplicity.One, typeof(MtcModel.Document), "References", RelationshipMultiplicity.Many, typeof(MtcModel.Reference), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_StructureContentDocument_Id", "Document", RelationshipMultiplicity.One, typeof(MtcModel.Document), "Structurecontents", RelationshipMultiplicity.Many, typeof(MtcModel.Structurecontent), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_StructureElementDocument_Id", "Structureelement", RelationshipMultiplicity.One, typeof(MtcModel.Structureelement), "Structurecontents", RelationshipMultiplicity.Many, typeof(MtcModel.Structurecontent), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_TaskDocument_Id", "Document", RelationshipMultiplicity.One, typeof(MtcModel.Document), "Tasks", RelationshipMultiplicity.Many, typeof(MtcModel.Task), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_TaskStructureContent_Id", "Structurecontent", RelationshipMultiplicity.ZeroOrOne, typeof(MtcModel.Structurecontent), "Tasks", RelationshipMultiplicity.Many, typeof(MtcModel.Task), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "FK_TaskUser_Id", "User", RelationshipMultiplicity.ZeroOrOne, typeof(MtcModel.User), "Tasks", RelationshipMultiplicity.Many, typeof(MtcModel.Task), true)]
[assembly: EdmRelationshipAttribute("MtcModel", "Documenttemplate_Structureelement", "Documenttemplates", RelationshipMultiplicity.Many, typeof(MtcModel.Documenttemplate), "Structureelements", RelationshipMultiplicity.Many, typeof(MtcModel.Structureelement))]
[assembly: EdmRelationshipAttribute("MtcModel", "Structureelement_Structureelement", "Structureelements1", RelationshipMultiplicity.Many, typeof(MtcModel.Structureelement), "Structureelements", RelationshipMultiplicity.Many, typeof(MtcModel.Structureelement))]

#endregion

namespace MtcModel
{

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MtcEntities : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new MtcEntities object.
        /// </summary>
        public MtcEntities() : 
                base(@"name=MtcEntitiesConnectionString", "MtcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new MtcEntities object using the connection string found in the 'MtcEntities' section of the application configuration file.
        /// </summary>
        public MtcEntities(string connectionString) : 
                base(connectionString, "MtcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new MtcEntities object.
        /// </summary>
        public MtcEntities(EntityConnection connection) : base(connection, "MtcEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Documenttemplate> Documenttemplates
        {
            get
            {
                if ((_Documenttemplates == null))
                {
                    _Documenttemplates = base.CreateObjectSet<Documenttemplate>("Documenttemplates");
                }
                return _Documenttemplates;
            }
        }
        private ObjectSet<Documenttemplate> _Documenttemplates;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reference> References
        {
            get
            {
                if ((_References == null))
                {
                    _References = base.CreateObjectSet<Reference>("References");
                }
                return _References;
            }
        }
        private ObjectSet<Reference> _References;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Structurecontent> Structurecontents
        {
            get
            {
                if ((_Structurecontents == null))
                {
                    _Structurecontents = base.CreateObjectSet<Structurecontent>("Structurecontents");
                }
                return _Structurecontents;
            }
        }
        private ObjectSet<Structurecontent> _Structurecontents;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Structureelement> Structureelements
        {
            get
            {
                if ((_Structureelements == null))
                {
                    _Structureelements = base.CreateObjectSet<Structureelement>("Structureelements");
                }
                return _Structureelements;
            }
        }
        private ObjectSet<Structureelement> _Structureelements;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Documenttemplates EntitySet.
        /// </summary>
        public void AddToDocumenttemplates(Documenttemplate documenttemplate)
        {
            base.AddObject("Documenttemplates", documenttemplate);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the References EntitySet.
        /// </summary>
        public void AddToReferences(Reference reference)
        {
            base.AddObject("References", reference);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Structurecontents EntitySet.
        /// </summary>
        public void AddToStructurecontents(Structurecontent structurecontent)
        {
            base.AddObject("Structurecontents", structurecontent);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Structureelements EntitySet.
        /// </summary>
        public void AddToStructureelements(Structureelement structureelement)
        {
            base.AddObject("Structureelements", structureelement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
}

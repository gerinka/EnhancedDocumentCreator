@using Mtc.Domain.Models
@model Mtc.WebClient.Models.TasksBoardViewModel
@{
    ViewBag.Title = "Дъска със задачи";
    int maxTasks = Math.Max(Model.InProgressTasks.Count(), Math.Max(Model.DoneTasks.Count(), Model.ToDoTasks.Count()));
    var maxRows = (int)Math.Ceiling((double)maxTasks / 2);
}
<div class="row">
    <div class="col-lg-4">
        <h3 class="text-center"><span class="label label-default">Незапочнати задачи</span></h3>
    </div>
    <div class="col-lg-4">
        <h3 class="text-center"><span class="label label-warning">Задачи в процес</span></h3>
    </div>
    <div class="col-lg-4">
        <h3 class="text-center"><span class="label label-success">Завършени задачи</span></h3>
    </div>
</div>

@for (int i = 0; i < maxRows; i++)
{
    <div class="row">
        @if (Model.ToDoTasks.Count() - i * 2 > 0)
        {
            Task task = Model.ToDoTasks[i * 2];
            <div class="col-lg-4">
                <div class="col-lg-6">
                    <div class="panel @task.TaskState.ToString().ToLower()">
                        <div class="panel-heading">@task.Title</div>
                        <div class="panel-body"
                             data-toggle="modal"
                             data-target="#taskModal"
                             data-taskid="@task.Id"
                             data-tasktitle="@task.Title"
                             data-subtitle="@task.Order) @task.Section.Content.Title"
                             data-action="@task.TaskAction.ToString()"
                             data-taskstate="@task.TaskState.ToString().ToLower()"
                             data-deadline="@task.Deadline">
                            @task.Order) @task.Section.Content.Title
                            <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                        </div>
                    </div>
                </div>
                @if (Model.ToDoTasks.Count() >= (i + 1) * 2)
                {
                    task = Model.ToDoTasks[i * 2 + 1];
                    <div class="col-lg-6">
                        <div class="panel panel-info">
                            <div class="panel-heading">@task.Title</div>
                            <div class="panel-body"
                                 data-toggle="modal"
                                 data-target="#taskModal"
                                 data-taskid="@task.Id"
                                 data-tasktitle="@task.Title"
                                 data-subtitle="@task.Order) @task.Section.Content.Title"
                                 data-action="@task.TaskAction.ToString()"
                                 data-taskstate="@task.TaskState.ToString().ToLower()"
                                 data-deadline="@task.Deadline">
                                @task.Order) @task.Section.Content.Title
                                <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-lg-6"></div>
                }
            </div>
        }
        else
        {
            <div class="col-lg-4">
                <div class="col-lg-6"></div>
                <div class="col-lg-6"></div>
            </div>
        }
        @if (Model.InProgressTasks.Count() - i * 2 > 0)
        {
            Task task = Model.InProgressTasks[i * 2];
            <div class="col-lg-4">
                <div class="col-lg-6">
                    <div class="panel @task.TaskState.ToString().ToLower()">
                        <div class="panel-heading">@task.Title</div>
                        <div class="panel-body"
                             data-toggle="modal"
                             data-target="#taskModal"
                             data-taskid="@task.Id"
                             data-tasktitle="@task.Title"
                             data-subtitle="@task.Order) @task.Section.Content.Title"
                             data-action="@task.TaskAction.ToString()"
                             data-taskstate="@task.TaskState.ToString().ToLower()"
                             data-deadline="@task.Deadline">
                            @task.Order) @task.Section.Content.Title
                            <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                        </div>
                    </div>
                </div>
                @if (Model.InProgressTasks.Count() >= (i + 1) * 2)
                {
                    task = Model.InProgressTasks[i * 2 + 1];
                    <div class="col-lg-6">
                        <div class="panel panel-info">
                            <div class="panel-heading">@task.Title</div>
                            <div class="panel-body"
                                 data-toggle="modal"
                                 data-target="#taskModal"
                                 data-taskid="@task.Id"
                                 data-tasktitle="@task.Title"
                                 data-subtitle="@task.Order) @task.Section.Content.Title"
                                 data-action="@task.TaskAction.ToString()"
                                 data-taskstate="@task.TaskState.ToString().ToLower()"
                                 data-deadline="@task.Deadline">
                                @task.Order) @task.Section.Content.Title
                                <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-lg-6"></div>
                }
            </div>
        }
        else
        {
            <div class="col-lg-4">
                <div class="col-lg-6"></div>
                <div class="col-lg-6"></div>
            </div>
        }
        @if (Model.DoneTasks.Count() - i * 2 > 0)
        {
            Task task = Model.DoneTasks[i * 2];
            <div class="col-lg-4">
                <div class="col-lg-6">
                    <div class="panel @task.TaskState.ToString().ToLower()">
                        <div class="panel-heading">@task.Title</div>
                        <div class="panel-body"
                             data-toggle="modal"
                             data-target="#taskModal"
                             data-taskid="@task.Id"
                             data-tasktitle="@task.Title"
                             data-subtitle="@task.Order) @task.Section.Content.Title"
                             data-action="@task.TaskAction.ToString()"
                             data-taskstate="@task.TaskState.ToString().ToLower()"
                             data-deadline="@task.Deadline">
                            @task.Order) @task.Section.Content.Title
                            <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                        </div>
                    </div>
                </div>
                @if (Model.DoneTasks.Count() >= (i + 1) * 2)
                {
                    task = Model.DoneTasks[i * 2 + 1];
                    <div class="col-lg-6">
                        <div class="panel panel-info">
                            <div class="panel-heading">@task.Title</div>
                            <div class="panel-body"
                                 data-toggle="modal"
                                 data-target="#taskModal"
                                 data-taskid="@task.Id"
                                 data-tasktitle="@task.Title"
                                 data-subtitle="@task.Order) @task.Section.Content.Title"
                                 data-action="@task.TaskAction.ToString()"
                                 data-taskstate="@task.TaskState.ToString().ToLower()"
                                 data-deadline="@task.Deadline">
                                @task.Order) @task.Section.Content.Title
                                <span class="glyphicon @task.TaskState.ToString().ToLower()-icon pull-right" aria-hidden="true"></span>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="col-lg-6"></div>
                }
            </div>
        }
        else
        {
            <div class="col-lg-4">
                <div class="col-lg-6"></div>
                <div class="col-lg-6"></div>
            </div>
        }
    </div>
}
<!-- Modal -->
<div id="taskModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header panel-heading">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Заглавие</h4>

            </div>
            <div class="modal-body">
                <p id="modal-text">Описание.</p>
                <p><span id="deadline">Краен срок</span> <span id="modal-icon" class="glyphicon pull-right" aria-hidden="true"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Затвори</button>
                <button type="button" class="btn btn-primary" id="action">Действие</button>
            </div>
        </div>

    </div>
</div>
@section scripts{
    <script>
        function NavigateToWritingModule(taskId) {
            window.location.href = '@Url.Action("WritingModule", "Document")?taskId=' + taskId;
        };

        $('#taskModal').on('show.bs.modal', function(event) {
            var button = $(event.relatedTarget); // Button that triggered the modal
            var id = button.data('id');
            var title = button.data('tasktitle');
            var subtitle = button.data('subtitle');
            var taskaction = button.data('action');
            var taskstate = button.data('taskstate');
            var deadline = button.data('deadline');
            var modal = $(this);
            modal.find('.modal-title').text(title);
            modal.find('.modal-content').addClass(taskstate);
            modal.find('#modal-icon').addClass(taskstate+'-icon');
            if (taskaction == 'Start') {
                modal.find('.modal-body p#modal-text').text('Започни писане на "' + title + '" - ' + subtitle);
                modal.find('#action').text('Започни');
                modal.find('#deadline').text('Краен срок: ' + deadline);
            } else if (taskaction == 'Finish') {
                modal.find('.modal-body p#modal-text').text('Завърши писане на "' + title + '" - ' + subtitle); 
                modal.find('#action').text('Завърши');
                modal.find('#deadline').text('Краен срок: ' + deadline);
            } else if (taskaction == 'Nothing') {
                modal.find('.modal-body p#modal-text').text('Секция "' + title + '" - ' + subtitle + ' е завършена.'); 
                modal.find('#action').text('Виж');
                modal.find('#deadline').text('Краен срок: ' + deadline);
            }
        });
    </script>
}
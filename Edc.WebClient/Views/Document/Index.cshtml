@using System.Globalization
@model Edc.WebClient.Models.InitDocumentViewModel

@{
    ViewBag.Title = "Създай документ";
     List<SelectListItem> items = Model.AllTemplates.Select(documentTemplate => new SelectListItem
    {
        Disabled = !documentTemplate.IsActive,
        Text = documentTemplate.Name,
        Value = documentTemplate.Id.ToString(CultureInfo.InvariantCulture)
    }).ToList();
}
@if (Model.HasExistingDocument)
{
    <div class="row">
        <div class="col-lg-1">
        </div>
        <div class="col-lg-10">
            <h2 class="text-center"><span class="label label-warning">Ако започнете нов документ, старият ще бъде маркиран като изтрит!</span></h2>
            <p class="text-center">Върнете се на @Html.ActionLink("Дъска със задачи", "TaskBoard", "Tasks"), за да продължите настощия документ.</p>
        </div>
        <div class="col-lg-1">
        </div>
    </div>
}
<div class="row">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title active" data-section="1">Задай тема</h3>
            @foreach (var template in Model.AllTemplates)
            {
                var index = 2;
                foreach (var sectionItem in template.Sections)
                {
                    <h3 class="panel-title hidden notselected" data-section="@index" data-type="structure" data-template="@template.Id">@sectionItem.Title</h3>
                    index ++;
                }
            }
            <h3 class="panel-title hidden" data-section="3" id="summaryHeading">Потвърди</h3>
        </div>
        <div class="panel-body">
     
            @using (Html.BeginForm("CreateDocument", "Document", FormMethod.Post, new { id = "createDocumentForm", @class = "form-horizontal" }))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group active" data-section="1">
                    @Html.LabelFor(model => model.Topic, new { @class = "col-sm-2 control-label label-panel", @id = "labelForTopic" })
                    <div class="col-sm-6">
                        @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" , @placeholder = "Заглавие"} })
                        @Html.ValidationMessageFor(m => m.Topic, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group active" data-section="1">
                    @Html.LabelFor(model => model.Deadline, new { @class = "col-sm-2 control-label label-panel", @id = "labelForDeadline" })
                    <div class="col-sm-3">
                        <div class="input-group date" id='deadline'>
                            @Html.EditorFor(model => model.Deadline, new { htmlAttributes = new { @class = "form-control"} })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group active" data-section="1">
                    @Html.LabelFor(model => model.SelectedDocumentTemplateId, new { @class = "col-sm-2 control-label label-panel", @id = "labelForTemplate" })
                    <div class="col-sm-10">
                        @Html.DropDownListFor(
                            model => model.SelectedDocumentTemplateId, 
                            items, 
                            string.Empty,
                            new { @class = "selectpicker",
                                @area_labelledby = "templateDropdownMenu",
                                @id = "templateDropdown",
                                @onchange = "PopulateSectionList()" 
                            })
                        @Html.ValidationMessageFor(m => m.SelectedDocumentTemplateId, "", new {@id = "templateDropdownError", @class = "text-danger" })
                    </div>
                </div>

                foreach (var template in Model.AllTemplates)
                {
                    var index = 2;
                    foreach (var sectionItem in template.Sections)
                    {

                        <div class="form-group hidden notselected" data-section="@index" data-template="@template.Id">
                            <div class="col-lg-8">
                                <div class="checkbox checkbox-primary">
                                    <input type="checkbox" class="sections" name="sections" value="@sectionItem.Id" id="@sectionItem.Id">
                                    <label for="@sectionItem.Id">@sectionItem.Title</label>
                                </div>
                            </div>
                            <div class="col-lg-8 col-lg-offset-1">
                                @foreach (var subsection in sectionItem.Subsections)
                                {
                                    <div class="checkbox checkbox-primary">
                                        <input type="checkbox" class="subsections" name="sections" value="@subsection.Id" id="@subsection.Id">
                                        <label for="@subsection.Id">@subsection.Title</label>
                                    </div>
                                }
                            </div>
                        </div>
                        index++;
                    }
                }
                <div class="form-group hidden" data-section="3" id="summary">

                    <div class="col-lg-offset-2 col-lg-8">
                        <div class="col-lg-1 top-buffer">
                            <span class="glyphicon glyphicon-flash info-icon" aria-hidden="true"></span>
                        </div>
                        <div class="text-justify top-buffer">
                            Вие сте задали да пишете документ на тема <strong>
                                                                          <span id="summaryTitle"></span>
                                                                      </strong>
                            Вие сте избрали <strong>
                                                <span id="summaryCountSections"></span>
                                            </strong>
                            подсекции, които ще бъдат основната структура на вашия документ. Ще бъдат генерирани точно толкова основни задачи, и ако поставения от вас краен срок позволява, ще бъдат генерирани няколко вълни от такива задачи.
                            Една подсекция ще се смята за завършена, когато написаният текст съдържа поне минималното количество думи.
                            Едновременно ще бъдат отключени не повече от 3 задачи.
                        </div>
                        <div class="col-lg-1 top-buffer">
                            <span class="glyphicon glyphicon-calendar info-icon" aria-hidden="true"></span>
                        </div>
                        <div class="text-justify top-buffer">
                            Като краен срок сте задали датата <strong><span id="summaryDeadline"></span></strong>. Базирайки се на този краен срок, индивидуалният краен срок на всяка от задачите ще бъде изчислен. При изтичане на този краен срок и незапочване/незавършване на задачата - тя ще бъда обозначена по специален начин.
                        </div>
                        <div class="col-lg-1 top-buffer">
                            <span class="glyphicon glyphicon-check info-icon" aria-hidden="true"></span>
                        </div>
                        <div class="text-justify top-buffer">
                            При писане на всеки модул(секция). Нейното съдържание ще може да се експортва в съответните позволени файлови формати. Експортването на целия документ ще бъде възможно по всяко време, но само в текстови формат. При завършване на всички генерирани задачи ще се появят допълнителни опции за експорт.
                        </div>

                        <div class="btn-group pull-right">
                            <div class="pull-right">
                                <button type="submit" class="btn btn-primary">
                                    <span class="glyphicon glyphicon-education" aria-hidden="true"></span> Генериране
                                </button>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(x => x.AuthorId, new { id = "author" })
                    @Html.HiddenFor(x => x.HasExistingDocument, new { id = "hasExistingDocument" })
                </div>
            }
            <nav>
                <ul class="pager">
                    <li class="previous"><a href="#"><span aria-hidden="true">&larr;</span> Назад</a></li>
                    <li class="next"><a href="#">Напред <span aria-hidden="true">&rarr;</span></a></li>
                </ul>
            </nav>
            <div class="progress">
                <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                    0%
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/topicCreator")
    <script>
        $(document).ready(function() {
            jQuery('.panel-heading').tipso({
                content: 'Добре дошли на страницата за създаване основата на вашия документ.',
                background: '#5cb85c',
                onHide: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                         $('.panel-heading').tipso('update','hideDelay', 0);
                        $('#labelForTopic').tipso('show');
                    }
                },
                onShow: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                        $('.panel-heading').tipso('update','hideDelay', 3000);
                        $('.panel-heading').tipso('hide');
                    }
                },
                width: 600,
                showArrow: false
            });
            jQuery('#labelForTopic').tipso({
                content: 'Тук можете да въведете темата, за която ще пишете.',
                background: '#5cb85c',
                position: "top-right",
                onHide: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                          $('#labelForTopic').tipso('update','hideDelay', 0);
                        $('#labelForDeadline').tipso('show');
                    }
                },
                onShow: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                          $('#labelForTopic').tipso('update','hideDelay', 5000);
                        $('#labelForTopic').tipso('hide');
                    }
                },
                showArrow: false
            });
            jQuery('#labelForDeadline').tipso({
                content: 'Трябва да зададете до коя дата се очаква да е готов документът.',
                background: '#5cb85c',
                position: "top-right",
                onHide: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                          $('#labelForDeadline').tipso('update','hideDelay', 0);
                        $('#labelForTemplate').tipso('show');
                    }
                },
                onShow: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                          $('#labelForDeadline').tipso('update','hideDelay', 5000);
                        $('#labelForDeadline').tipso('hide');
                    }
                },
                showArrow: false
            });
            jQuery('#labelForTemplate').tipso({
                content: 'Изберете най-подходящият шаблон за вашия документ. По този начин ще може да му се състави структурата автоматично.',
                background: '#5cb85c',
                position: "bottom-right",
                onShow: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                          $('#labelForTemplate').tipso('update','hideDelay', 7000);
                        $('#labelForTemplate').tipso('hide');
                    }
                },
                onHide: function() {
                    if (@Json.Encode(Model.IsHelpOn)) {
                        $('#labelForTemplate').tipso('update','hideDelay', 0);
                    }
                },
                width: 600,
                showArrow: false
            });
            if (@Json.Encode(Model.IsHelpOn)) {
                $('.panel-heading').tipso('show');
            }
        });
    </script>
}